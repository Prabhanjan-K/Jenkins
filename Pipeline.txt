ScriptedPipeline:
===========================
node('built-in') 
{
    stage('ContinousDownload') 
    {
       git 'https://github.com/intelliqittrainings/maven.git'
    }
    stage('continousBuild')
    {
        sh 'mvn package'
    }
    stage('continousDeployment')
    {
        deploy adapters: [tomcat9(credentialsId: '230fddb6-7cbb-498a-b57f-54a9e27c4ea8', path: '', url: 'http://172.31.1.230:8080')], contextPath: 'testapp', war: '**/*.war'
    }
    stage('ContinousTesting')
    {
        git 'https://github.com/intelliqittrainings/FunctionalTesting.git'
        sh 'java -jar /var/lib/jenkins/workspace/ScriptedPipeline/testing.jar'
    }
    stage('ContinousDelivery')
    {
        deploy adapters: [tomcat9(credentialsId: '230fddb6-7cbb-498a-b57f-54a9e27c4ea8', path: '', url: 'http://172.31.1.73:8080')], contextPath: 'Prodapp', war: '**/*.war'
    }
}


Declarative Pipeline:
=============================
pipeline
{
    agent any
    stages
    {
        stage('Continous Download')
        {
            steps
            {
                git 'https://github.com/intelliqittrainings/maven.git'
            }
        }
        stage('Continous Build')
        {
            steps
            {
                sh 'mvn package'
            }
        }
        stage('Continous Deploy')
        {
            steps
            {
                  deploy adapters: [tomcat9(credentialsId: '230fddb6-7cbb-498a-b57f-54a9e27c4ea8', path: '', url: 'http://172.31.1.230:8080')], contextPath: 'testapp', war: '**/*.war'
            }
        }
        stage('Continous Testing')
        {
            steps
            {
                git 'https://github.com/intelliqittrainings/FunctionalTesting.git'
                sh 'java -jar /var/lib/jenkins/workspace/Declarative Pipeline/testing.jar'
            }
        }
        stage('Continous Delivery')
        {
            steps
            {
                deploy adapters: [tomcat9(credentialsId: '230fddb6-7cbb-498a-b57f-54a9e27c4ea8', path: '', url: 'http://172.31.1.73:8080')], contextPath: 'Prodapp', war: '**/*.war'
            }
        }
    }
}



Post Actions:
==============

pipeline
{
    agent any
    stages
    {
        stage('Continous Download')
        {
            steps
            {
                git 'https://github.com/intelliqittrainings/maven.git'
            }
        }
        stage('Continous Build')
        {
            steps
            {
                sh 'mvn package'
            }
        }
        stage('Continous Deploy')
        {
            steps
            {
                  deploy adapters: [tomcat9(credentialsId: '230fddb6-7cbb-498a-b57f-54a9e27c4ea8', path: '', url: 'http://172.31.1.230:8080')], contextPath: 'testapp', war: '**/*.war'
            }
        }
        stage('Continous Testing')
        {
            steps
            {
                git 'https://github.com/intelliqittrainings/FunctionalTesting.git'
                sh 'java -jar /var/lib/jenkins/workspace/ScriptedPipeline/testing.jar'
            }
        }
        
    }
    post
    {
        success
        {
            deploy adapters: [tomcat9(credentialsId: '230fddb6-7cbb-498a-b57f-54a9e27c4ea8', path: '', url: 'http://172.31.1.73:8080')], contextPath: 'Prodapp', war: '**/*.war'
        }
        failure
        {
           mail bcc: '', body: '', cc: '', from: '', replyTo: '', subject: 'Pipeline Failed', to: 'kprabhanjan9@gmail.com' 
        }
    }
}


Exceptional Handling(DeclarativePipeline)
===================================

pipeline
{
    agent any
    stages
    {
        stage('Contionous Download')
        {
            steps
            {
                script
                {
                    try
                    {
                        git 'https://github.com/intelliqittrainings/maven.git'
                    }
                    catch(Exception e1)
                    {
                        mail bcc: '', body: '', cc: '', from: '', replyTo: '', subject: 'Download Failed', to: 'git.admin@gmail.com'
                        exit(1)
                    }
                }
            }
        }
        stage('Continous Build')
        {
            steps
            {
             script
             {
                 try
                 {
                     sh 'mvn package'
                 }
                 catch(Exception e2)
                 {
                     mail bcc: '', body: '', cc: '', from: '', replyTo: '', subject: 'Download Failed', to: 'developteam@gmail.com'
                     exit(1)
                 }
             }
            }
        }
        stage('Continous Deploy')
        {
            steps
            {
                script
                {
                    try
                    {
                        deploy adapters: [tomcat9(credentialsId: '230fddb6-7cbb-498a-b57f-54a9e27c4ea8', path: '', url: 'http://172.31.1.230:8080')], contextPath: 'testapp', war: '**/*.war'
                    }
                    catch(Exception e3)
                    {
                        mail bcc: '', body: '', cc: '', from: '', replyTo: '', subject: 'Download Failed', to: 'middleware@gmail.com'
                        exit(1)
                    }
                }
            }
        }
        stage('Continous Testing')
        {
            steps
            {
                script
                {
                    try
                    {
                        git 'https://github.com/intelliqittrainings/FunctionalTesting.git'
                        sh 'java -jar /var/lib/jenkins/workspace/DeclarativePipeline3/testing.jar'
                    }
                    catch(Exception e4)
                    {
                        mail bcc: '', body: '', cc: '', from: '', replyTo: '', subject: 'Download Failed', to: 'Testing.team@gmail.com'
                        exit(1)
                    }
                }
            }
        }
        stage('continous delivery')
        {
            steps
            {
                script
                {
                    try
                    {
                        deploy adapters: [tomcat9(credentialsId: '230fddb6-7cbb-498a-b57f-54a9e27c4ea8', path: '', url: 'http://172.31.1.73:8080')], contextPath: 'Prodapp', war: '**/*.war'
                    }
                    catch(Exception e5)
                    {
                        mail bcc: '', body: '', cc: '', from: '', replyTo: '', subject: 'Download Failed', to: 'delivery.team@gmail.com'
                    }
                    
                }
            }
        }
    }
}


Exceptionhandling(ScriptedPipeline)
================================

node('built-in') 
{
    stage('ContinousDownload') 
    {
                    try
                    {
                        git 'https://github.com/intelliqittrainings/maven.git'
                    }
                    catch(Exception e1)
                    {
                        mail bcc: '', body: '', cc: '', from: '', replyTo: '', subject: 'Download Failed', to: 'git.admin@gmail.com'
                        exit(1)
                    }
    }
    stage('continousBuild')
    {
                 try
                 {
                     sh 'mvn package'
                 }
                 catch(Exception e2)
                 {
                     mail bcc: '', body: '', cc: '', from: '', replyTo: '', subject: 'Download Failed', to: 'developteam@gmail.com'
                     exit(1)
                 }
    }
    stage('continousDeployment')
    {
                    try
                    {
                        deploy adapters: [tomcat9(credentialsId: '230fddb6-7cbb-498a-b57f-54a9e27c4ea8', path: '', url: 'http://172.31.1.230:8080')], contextPath: 'testapp', war: '**/*.war'
                    }
                    catch(Exception e3)
                    {
                        mail bcc: '', body: '', cc: '', from: '', replyTo: '', subject: 'Download Failed', to: 'middleware@gmail.com'
                        exit(1)
                    }
    }
    stage('ContinousTesting')
    {
                    try
                    {
                        git 'https://github.com/intelliqittrainings/FunctionalTesting.git'
                        sh 'java -jar /var/lib/jenkins/workspace/ScriptedPipeline1/testing.jar'
                    }
                    catch(Exception e4)
                    {
                        mail bcc: '', body: '', cc: '', from: '', replyTo: '', subject: 'Download Failed', to: 'Testing.team@gmail.com'
                        exit(1)
                    }
     }
    stage('ContinousDelivery')
    {
                    try
                    {
                        deploy adapters: [tomcat9(credentialsId: '230fddb6-7cbb-498a-b57f-54a9e27c4ea8', path: '', url: 'http://172.31.1.73:8080')], contextPath: 'Prodapp', war: '**/*.war'
                    }
                    catch(Exception e5)
                    {
                        mail bcc: '', body: '', cc: '', from: '', replyTo: '', subject: 'Download Failed', to: 'delivery.team@gmail.com'
                    }
    }
}


Declarative Pipeline(without pipeline syntax)
=======================================

pipeline
{
    agent any
    stages
    {
        stage('Continous Download')
        {
            steps
            {
                git 'https://github.com/intelliqittrainings/maven.git'
            }
        }
        stage('Continous Build')
        {
            steps
            {
                sh 'mvn package'
            }
        }
        stage('continous Deploy')
        {
            steps
            {
                sh 'scp /var/lib/jenkins/workspace/DeclarativePipeline4/webapp/target/webapp.war ubuntu@172.31.1.230:/var/lib/tomcat10/webapps/testapp.war'
            }
        }
        stage('Continous Testing')
        {
            steps
            {
                git 'https://github.com/intelliqittrainings/FunctionalTesting.git'
                sh 'java -jar /var/lib/jenkins/workspace/DeclarativePipeline4/testing.jar'
            }
        }
        stage('Continous Delivery')
        {
            steps
            {
                sh 'scp /var/lib/jenkins/workspace/DeclarativePipeline4/webapp/target/webapp.war ubuntu@172.31.1.73:/var/lib/tomcat10/webapps/prodapp.war'
            }
        }
    }
}

DeclarativePipelinewithSharedLibraries:
===================================

@Library('Library')_

pipeline
{
    agent any
    stages
    {
        stage('Continous Download')
        {
            steps
            {
                script
                {
                    cicd.gitDownload("maven")
                }
            }
        }
        stage('Continous Build')
        {
            steps
            {
                script
                {
                    cicd.buildArtifact()
                }
            }
        }
        stage('Continous deploy')
        {
            steps
            {
                script
                {
                    cicd.deploytomcat("DeclarativePipelinewithSharedLibraries","172.31.1.230","testapp")
                }
            }
        }
        stage('Continous testing')
        {
            steps
            {
                script
                {
                    cicd.gitDownload("FunctionalTesting")
                    cicd.testing("DeclarativePipelinewithSharedLibraries")
                }
            }
        }
        stage('Continous Delivery')
        {
            steps
            {
                script
                {
                    cicd.deploytomcat("DeclarativePipelinewithSharedLibraries","172.31.1.73","prodapp")
                }
            }
        }
    }
}